using MultiPlayer.Server.DTO;
using System.Net;
using System.Net.Sockets;

namespace MultiPlayer.Server
{
    public abstract class AProtocolSocket
    {
        public static AProtocolSocket CreateInstance(IPAddress ipAddress, int port)
        {
            return new TCPProtSocket(ipAddress, port);
            //return new UDPProtSocket(ipAddress, port);
        }

        public abstract void Start();
        public abstract void Close(string reason);//after close it becomes unusable

        public abstract IClientConnection AcceptClientConnction();

        public abstract bool IsConnectionPending { get; }

    }

    internal class TCPProtSocket : AProtocolSocket, IClientConnection
    {
        public override bool IsConnectionPending => _socket.Pending();


        private TcpListener _socket;
        private TcpClient _client;

        public TCPProtSocket(IPAddress ipAddress, int port)
        {
            _socket = new TcpListener(ipAddress, port);
        }

        public override void Close(string reason)
        {
            _socket.Stop();
            _socket.Dispose();
        }

        public override void Start()
        {
            _socket.Start();
        }

        public override IClientConnection AcceptClientConnction()
        {
            _client =  _socket.AcceptTcpClient();

            return this;
        }

        public NetworkStream GetStream() => _client.GetStream();
    }

    internal class UDPProtSocket : AProtocolSocket, IClientConnection
    {
        public override bool IsConnectionPending => throw new NotImplementedException();


        public UDPProtSocket()
        {
            //_socket = new UdpListener(ipAddress, port);// this is very different. Check GROK
        }

        public override void Close(string reason)
        {
            throw new NotImplementedException();
        }

        public override void Start()
        {
            throw new NotImplementedException();
        }

        public override IClientConnection AcceptClientConnction()
        {
            throw new NotImplementedException();
        }

        public NetworkStream GetStream()
        {
            throw new NotImplementedException();
        }
    }
}
