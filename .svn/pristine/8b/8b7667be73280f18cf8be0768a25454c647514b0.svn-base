using System.Net.Sockets;

namespace MultiPlayer.Server.DTO
{

    public class ActiveConnection
    {
        //public NetworkStream Stream => _stream;
        public int ConnID => _id;
        public bool DataAvailable => _stream.DataAvailable;
        public bool Inactive { get; internal set; }//heartbeat lost
        public DateTime LastContact { get; set; }

        private int _id;
        private NetworkStream _stream;
        private IClientConnection _client;

        public ActiveConnection(IClientConnection client, int inID)
        {
            _client = client;
            _id = inID;

            _stream = _client.GetStream();
            LastContact = DateTime.UtcNow;
        }

        public void Stop()
        {
            _client.Close("Stop requested");
        }

        public void SendPacket(PacketBase packet)
        {
            _stream.Write(packet.GetBytes());
        }

        public ClientPacket ReceivePacket()
        {
            byte[] metadata = new byte[3];
            _stream.Read(metadata);

            var packetLength = BitConverter.ToUInt16(metadata, 1);
            var packetData = new byte[packetLength];
            if (packetLength > 0)
                _stream.Read(packetData);

            return ClientPacket.Construct((PacketType)metadata[0], packetData);
        }
    }

    public interface IClientConnection
    {
        public abstract void Close(string reason);
        public abstract NetworkStream GetStream();
    }

}
